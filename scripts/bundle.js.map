{"version":3,"sources":["tank/scripts/node_modules/browser-pack/_prelude.js","tank/scripts/src/tank/scripts/main.js","tank/scripts/main.js","tank/scripts/src/tank/scripts/matrices.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","square","x","toRad","Math","PI","sgn","NaN","colorObj","g","b","grey","this","paddy","p","c","pad_char","pad","Array","join","slice","rgba","makeGrey","doNothing","colorScale","beg","end","pos","mat","CP","window","CanvasRenderingContext2D","prototype","lineTo","dashedLine","y","x2","y2","dashArray","moveTo","dx","dy","slope","distRemaining","sqrt","dashIndex","draw","dashLength","min","xStep","toString","mode","toFixed","round","$","document","ready","getCenter","M","get","setEngOff","userInputs","engineOn","refuel","fueling","html","css","text","gassing","breaking","fireMain","setEngOn","doKeyHelp","id","norm","key","down","up","el","mouseenter","mouseleave","mousedown","mouseup","plotTankPart","mapCtx","fillStyle","tank","colors","beginPath","plot","fill","updateTankPos","dt","backgroundColor","rect","mapWidth","mapHeight","fuel","gradient","createLinearGradient","addColorStop","lineWidth","fillRect","font","color","fillText","ceil","strokeStyle","stroke","w","tracks","arr","opac","left","right","explosionObj","targets","j","m","translate","centerPos","mult","arc","circRadius","bullets","arrow","closePath","runsPerSec","mapEl","getContext","setUpCanvasSize","cntrl","sizeRatio","maxW","max","parent","innerWidth","maxH","innerHeight","toPrecision","height","width","floor","font-size","bestScore","tankHeight","tankWidth","lastMouse","frameId","reloadMain","readBestScore","localStorage","getItem","setBestScore","score","setItem","refuelWidth","refuelHeight","homo_coor","coor","v","vert","horz","outputtedFuel","recoil","rtn","basic","Matrix","ctor","ammo","coolDown","reload","reloadTime","coolDownTime","nextToShow","impactFrame","impactTime","d","h","distanceAbove","vMax","move","top_bot","top","bot","setMax","upper","lower","newMax","parseFloat","weightedMax","cos","requestAnimationFrame","background-color","explosion","theta","coor_at_angle","exp","setUpAmmo","table","totalAmmo","row","createElement","append","mousemove","mouseout","keydown","event","modifiers","altKey","ctrlKey","metaKey","shiftKey","toSet","which","preventDefault","click","currentlyChangingMaxSpeed","keyup","prompt","display","setTimeout","skidRatio","displayedSpeed","reverse","direction","gunAngle","angleChange","gunChange","trackProb","runCount","hitCount","frameTime","beginTime","run","now","performance","A","B","C","D","maxV","speed","hide","show","cooldown","sin","targetX","bulletX","gunWRTtank","bulletTop","bulletBot","tmp","targetPos","tankTransform","gunTransform","turnsPerSec","slowAmount","adjuster","skidder","abs","newDisplayableSpeed","weightedSpeed","turnProb","tankC","mapPos","offset","mouseDistX","pageX","mouseDistY","pageY","angle","atan2","diff","rotate","random","tracksPerSec","trackTimeTillDie","fadePerRun","trackLen","./matrices.js",2,"gcd","temp","gcdArray","input","result","M_h","M_w","self","M_data","other","mMult","set","isNaN","atFront","vldOp","m1","m2","add","sub","scalarMult","sum","k","make","isArray","dist","c1","c2","sqr","arguments","I","ctx","div","rot","toO","fromO","scale","polygon","sides","radius","center","pointUp","rf","pi","internalAngle"],"mappings":"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","file":"tank/scripts/bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","var mat = require('./matrices.js');\r\n\r\nfunction square(x)\r\n{\r\n    return x*x;\r\n}\r\nfunction cube(x)\r\n{\r\n    return x*x*x;\r\n}\r\n\r\nfunction toRad(x)\r\n{\r\n    return x * Math.PI / 180;\r\n}\r\nfunction toDeg(x)\r\n{\r\n    return x / Math.PI * 180;\r\n}\r\nfunction closestToZero(a,b)\r\n{\r\n    return Math.abs(a) < Math.abs(b) ? a : b;\t\r\n}\r\n\r\nfunction sgn(x) {\r\n    return typeof x === 'number' ? x ? x < 0 ? -1 : 1 : x === x ? 0 : NaN : NaN;\r\n}\r\n\r\n\r\nvar CP = window.CanvasRenderingContext2D && CanvasRenderingContext2D.prototype;\r\nif (CP && CP.lineTo){\r\n    CP.dashedLine = function(x,y,x2,y2,dashArray)\r\n    {\r\n        if (!dashArray) \r\n        {\r\n            dashArray=[10,5];\r\n        }\r\n        // beginning on line\r\n        this.moveTo(x, y);\r\n        // gradient\r\n        var dx = (x2-x), dy = (y2-y);\r\n        if(dx === 0) dx = 1e-15;\r\n        var slope = dy/dx;\r\n        \r\n        // length of line\r\n        var distRemaining = Math.sqrt( dx*dx + dy*dy );\r\n        \r\n        // cycles through dashes and gaps\r\n        var dashIndex=0, draw=true;\r\n        while (distRemaining>=0.1)\r\n        {\r\n            // length is taken from array or shortened if line is almost over\r\n            var dashLength = Math.min(dashArray[dashIndex%dashArray.length],distRemaining);\r\n            \r\n            if (dashLength==0) \r\n            {\r\n                dashLength = 0.001; // Hack for Safari\r\n            }\r\n        \r\n            var xStep = sgn(dx) * dashLength / Math.sqrt(1 + slope*slope);\r\n            \r\n            // adjust x and y for next dash/gap\r\n            x += xStep;\r\n            y += slope*xStep;\r\n            \r\n            // draw dash or skip over a gap\r\n            this[draw ? 'lineTo' : 'moveTo'](x,y);\r\n            distRemaining -= dashLength;\r\n            draw = !draw;\r\n            ++dashIndex;\r\n        }\r\n    };\r\n}\r\n\r\nfunction colorObj(r,g,b,a,grey)\r\n{\r\n    if(typeof a === 'undefined')\r\n        a = 1;\r\n    if(!!grey)\r\n    {\r\n        var g = (r || 0) * 0.3 + (g || 0) * 0.59 + (b || 0) * 0.11;\r\n        this.r = g;\r\n        this.g = g;\r\n        this.b = g;\r\n        this.a = a;\r\n    }\r\n    else\r\n    {\r\n        this.r = r || 0;\r\n        this.g = g || 0;\r\n        this.b = b || 0;\r\n        this.a = a;\r\n    }\r\n}\r\n\r\nfunction paddy(n, p, c) {\r\n    var pad_char = typeof c !== 'undefined' ? c : '0';\r\n    var pad = new Array(1 + p).join(pad_char);\r\n    return (pad + n).slice(-pad.length);\r\n}\r\n\r\ncolorObj.prototype.toString = function(mode)\r\n{\r\n    if(typeof mode === 'undefined' || mode === 'rgba')\r\n        return 'rgba(' + this.r.toFixed() + ',' + this.g.toFixed() + ',' + this.b.toFixed() + ',' + this.a + ')';\r\n    if(mode === 'rgb')\r\n        return 'rgb(' + this.r.toFixed() + ',' + this.g.toFixed() + ',' + this.b.toFixed() + ')';\r\n    if(mode === 'hex')\r\n        return '#' + paddy(Math.round(this.r).toString(16),2) + paddy(Math.round(this.g).toString(16),2) + paddy(Math.round(this.b).toString(16),2);\r\n    return '';\r\n};\r\n\r\nfunction rgba(r,g,b,a,grey)\r\n{\r\n    return new colorObj(r,g,b,a,grey);\r\n}\r\n\r\nfunction makeGrey(c,doNothing)\r\n{\r\n    return rgba(c.r,c.g,c.b,c.a,!doNothing);\r\n}\r\n\r\n\r\nfunction colorScale(beg,end,pos)\r\n{\r\n    return rgba(beg.r * pos + (1-pos)*end.r,\r\n                beg.g * pos + (1-pos)*end.g,\r\n                beg.b * pos + (1-pos)*end.b,\r\n                beg.a * pos + (1-pos)*end.a);\r\n}\r\n\r\n\t\t\r\n\r\n\t$(document).ready(function()\r\n\t{\r\n\t\t\t\t\r\n\t\trunsPerSec = /*prompt(\"enter fps\",\"60\t\") ||/**/ 60;\r\n\t\tvar mapEl = $(\"#map\");\r\n\t\tvar mapCtx = mapEl[0].getContext(\"2d\");\r\n\t\tvar backgroundColor = rgba(229,238,204.99);\r\n\t\t\r\n        var mapWidth, mapHeight;\r\n        \r\n\t\tvar setUpCanvasSize = function()\r\n\t\t{\r\n\t\t    var cntrl = $(\".controls\");\r\n\t\t    var sizeRatio = 1.61803;\r\n\t\t    // borders, margins, padding\r\n\t\t    var verticalExtra = 3*4 + 4.5;\r\n\t\t    var horizontalExtra = 3*2;\r\n\t\t    var tableExtra = 6*3;\r\n\t\t    \r\n\t\t    var maxW = Math.max(mapEl.parent().innerWidth(),200*sizeRatio);\r\n\t\t    var maxH = Math.max(mapEl.parent().innerHeight(),100);\r\n\t\t    \r\n            /* \r\n             * assume size is constrained by height of page\r\n             * and set height/width of map accordingly\r\n             */\r\n            mapHeight = maxH*3/4-2*3;\r\n            mapWidth  = mapHeight*2*sizeRatio;\r\n            /*\r\n             * if with of page is infact constraining the size of the map\r\n             * then recalculate the sizes\r\n             */\r\n\t\t    if(mapWidth > maxW)\r\n\t\t    {\r\n                mapWidth  = maxW-2*3;\r\n                mapHeight = mapWidth/(2*sizeRatio);\r\n                $(\"#bah\").text(\"w: \" + mapWidth.toPrecision(3) + \" h: \" + mapHeight.toPrecision(3));\r\n            }\r\n            /*\r\n             * And then apply the new sizes\r\n             */\r\n\t\t        \r\n\t        mapEl[0].height = mapHeight;\r\n\t        mapEl[0].width  = mapWidth;\r\n\t        \r\n            cntrl.css(\r\n            {\r\n                'height':Math.floor((mapHeight+2*3)/3-4),\r\n                'width':Math.floor(mapWidth+2*3),\r\n                'font-size': mapWidth/50\r\n            });\r\n\t\t};\r\n\t\tsetUpCanvasSize();\r\n\r\n\t\tvar tankHeight = mapHeight/15;\r\n\t\tvar tankWidth = tankHeight *  1.61803398;\t\r\n        \r\n            \r\n        var lastMouse = 0;\r\n        var mouseOnTank = false;\r\n        \r\n        var frameId = 0;\r\n        \t\t\r\n\t\tvar userInputs = {\r\n\t\tgassing: false,\r\n\t\tbreaking: false,\r\n\t\tfireMain: false,\r\n\t\treloadMain: false,\r\n\t\tengineOn: false };\r\n\t\t\r\n\t\t// converts 'm/h' to pixels per second\r\n\t\tvar speedRatio = 10;\r\n\t\t\r\n\t\tvar readBestScore = function()\r\n\t\t{\r\n            var s = window.localStorage.getItem(\"bestScore\");\r\n            if(s !== null)\r\n                return s;\r\n            else\r\n                return 0;\r\n\t\t};\r\n\t\tvar setBestScore = function(score)\r\n\t\t{\r\n\t\t    return window.localStorage.setItem(\"bestScore\",score);\r\n\t\t};\r\n\t\tvar bestScore;\r\n\t\ttry\r\n\t\t{\r\n\t\t    bestScore = readBestScore();\r\n\t\t}\r\n\t\tcatch(e)\r\n\t\t{\r\n\t\t    bestScore = 0;\r\n\t\t}\r\n        $(\"#bestscore\").html(bestScore);\r\n\t\t\r\n\t\t\r\n\t\tvar refuel = (function()\r\n\t\t{\r\n\t\t\tvar refuelWidth = tankWidth * 2;\r\n\t\t\tvar refuelHeight = tankHeight * 1.8;\r\n\t\t\t\r\n\t\t\tvar x = mapWidth*9/10-refuelWidth;\r\n\t\t\tvar y = mapHeight/10+refuelHeight;\r\n\t\t\t\r\n\t\t\treturn {'s': \r\n\t\t\t  mat.homo_coor(mat.coor(x,y),\r\n\t\t\t\t\t\t\tmat.coor(x+refuelWidth,y),\r\n\t\t\t\t\t\t\tmat.coor(x+refuelWidth,y+refuelHeight),\r\n\t\t\t\t\t\t\tmat.coor(x,y+refuelHeight),\r\n\t\t\t\t\t\t\tmat.coor(x,y+0*refuelHeight)),\r\n\t\t\t\t\t'arrow': \r\n\t\t\t [mat.homo_coor(mat.coor(x+refuelWidth*7/16,y+refuelHeight*3/8),\r\n\t\t\t\t\t\t\tmat.coor(x+refuelWidth*13/16,y+refuelHeight*3/8),\r\n\t\t\t\t\t\t\tmat.coor(x+refuelWidth*13/16,y+refuelHeight*5/8),\r\n\t\t\t\t\t\t\tmat.coor(x+refuelWidth*7/16,y+refuelHeight*5/8)),\r\n\t\t\t  mat.homo_coor(mat.coor(x+refuelWidth*4/16,y+refuelHeight*4/8),\r\n\t\t\t\t\t\t\tmat.coor(x+refuelWidth*7/16,y+refuelHeight*2/8),\r\n\t\t\t\t\t\t\tmat.coor(x+refuelWidth*7/16,y+refuelHeight*6/8))],\r\n\t\t\t\t'color': rgba(255, 62, 24, 1),'fueling':false};\r\n\t\t})();\r\n\t\t\r\n\t\tvar tank = {'v': {vert:0,horz:0}, 's': (function()\r\n\t\t{\t\t\t\t\t\r\n\t\t\tvar x = (mapWidth-tankWidth)/2;\r\n\t\t\tvar y =(mapHeight-tankHeight)/2;\r\n\t\t\t\r\n\t\t\treturn [\t/* tank for modelling purposes (not plotted) */\r\n\t\t\t\t\tmat.homo_coor(\tmat.coor(x,y),\r\n\t\t\t\t\t\t\t\t\tmat.coor(x+tankWidth,y),\r\n\t\t\t\t\t\t\t\t\tmat.coor(x+tankWidth/2,y+tankHeight/2),\r\n\t\t\t\t\t\t\t\t\tmat.coor(x+tankWidth,y+tankHeight),\r\n\t\t\t\t\t\t\t\t\tmat.coor(x,y+tankHeight),\r\n\t\t\t\t\t\t\t\t\tmat.coor(x,y)),\r\n\t\t\t\t\t\t/* tank body */\r\n\t\t\t\t\tmat.homo_coor(\tmat.coor(x,y+tankHeight/10),\r\n\t\t\t\t\t\t\t\t\tmat.coor(x+tankWidth/10,y),\r\n\t\t\t\t\t\t\t\t\tmat.coor(x+tankWidth*9/10,y),\r\n\t\t\t\t\t\t\t\t\tmat.coor(x+tankWidth,y+tankHeight/10),\r\n\t\t\t\t\t\t\t\t\tmat.coor(x+tankWidth,y+tankHeight*9/10),\r\n\t\t\t\t\t\t\t\t\tmat.coor(x+tankWidth*9/10,y+tankHeight),\r\n\t\t\t\t\t\t\t\t\tmat.coor(x+tankWidth/10,y+tankHeight),\r\n\t\t\t\t\t\t\t\t\tmat.coor(x,y+tankHeight*9/10),\r\n\t\t\t\t\t\t\t\t\tmat.coor(x,y)),\r\n\t\t\t\t\t\t/* tank turret */\r\n\t\t\t\t\tmat.homo_coor(\tmat.coor(x+tankWidth*7/10,y+tankHeight/10),\r\n\t\t\t\t\t\t\t\t\tmat.coor(x+tankWidth*9/10,y+tankHeight/2),\r\n\t\t\t\t\t\t\t\t\tmat.coor(x+tankWidth*7/10,y+tankHeight*9/10),\r\n\t\t\t\t\t\t\t\t\tmat.coor(x+tankWidth*5/10,y+tankHeight/2),\r\n\t\t\t\t\t\t\t\t\tmat.coor(x+tankWidth*7/10,y+tankHeight/10)),\r\n\t\t\t\t\t\t/* tank side */\r\n\t\t\t\t\tmat.homo_coor(\tmat.coor(x+tankWidth*1/10,y+tankHeight/10),\r\n\t\t\t\t\t\t\t\t\tmat.coor(x+tankWidth*13/20,y+tankHeight/10),\r\n\t\t\t\t\t\t\t\t\tmat.coor(x+tankWidth*5/10,y+tankHeight*4/10),\r\n\t\t\t\t\t\t\t\t\tmat.coor(x+tankWidth*1/10,y+tankHeight/10)),\r\n\t\t\t\t\t\t/* tank side */\r\n\t\t\t\t\tmat.homo_coor(\tmat.coor(x+tankWidth*1/10,y+tankHeight*9/10),\r\n\t\t\t\t\t\t\t\t\tmat.coor(x+tankWidth*13/20,y+tankHeight*9/10),\r\n\t\t\t\t\t\t\t\t\tmat.coor(x+tankWidth*5/10,y+tankHeight*6/10),\r\n\t\t\t\t\t\t\t\t\tmat.coor(x+tankWidth*1/10,y+tankHeight*9/10)),\r\n\t\t\t\t\t\t/* tank back */\r\n\t\t\t\t\tmat.homo_coor(\tmat.coor(x+tankWidth*1/10,y+tankHeight*2/10),\r\n\t\t\t\t\t\t\t\t\tmat.coor(x+tankWidth*5/20,y+tankHeight*3/10),\r\n\t\t\t\t\t\t\t\t\tmat.coor(x+tankWidth*5/20,y+tankHeight*7/10),\r\n\t\t\t\t\t\t\t\t\tmat.coor(x+tankWidth*1/10,y+tankHeight*8/10),\r\n\t\t\t\t\t\t\t\t\tmat.coor(x+tankWidth*1/10,y+tankHeight*2/10)),\r\n\t\t\t\t\t\t/* tank main gun */\r\n\t\t\t\t\tmat.homo_coor(\tmat.coor(x+tankWidth*2/3,y+tankHeight*2/5),\r\n\t\t\t\t\t\t\t\t\tmat.coor(x+tankWidth*4/3,y+tankHeight*2/5),\r\n\t\t\t\t\t\t\t\t\tmat.coor(x+tankWidth*4/3,y+tankHeight*3/5),\r\n\t\t\t\t\t\t\t\t\tmat.coor(x+tankWidth*2/3,y+tankHeight*3/5),\r\n\t\t\t\t\t\t\t\t\tmat.coor(x+tankWidth*2/3,y+tankHeight*2/5))\r\n\t\t\t\t\t\t\t\t\t];\r\n\t\t})(),'colors':[rgba(0,0,0,0.0),rgba(0,46,0),rgba(28,70,28),rgba(141,73,28),rgba(141,73,28),rgba(28,70,28),rgba(0,0,0)],\r\n\t\t'fuel':1,'outputtedFuel':100,'circRadius': tankWidth/6, 'recoil':{'vert':0,'horz':0}};\r\n\t\t\r\n\t\t\r\n\t\tvar tracks = (function()\r\n\t\t{\t\r\n\t\t\tvar rtn = {'arr':new Array(15), // 30 tracks in total (15 oer side)\r\n\t\t\t\t\t\t'id':0,\r\n\t\t\t\t\t\t'color':rgba(95,63,34)};\r\n\t\t\tvar basic = function()\r\n\t\t\t{\r\n\t\t\t\tthis.left = new mat.Matrix(0,0);\t// left track matrix\r\n\t\t\t\tthis.right = new mat.Matrix(0,0);\t// right track matrix\r\n\t\t\t\tthis.opac  = 0;\t\t\t\t\t// initial opacity (integer between 0 and 100)\r\n\t\t\t};\t\t\t\t\t\r\n\t\t\tfor(var i = 0; i < rtn.arr.length; ++i)\r\n\t\t\t\trtn.arr[i] = new basic();\r\n\t\t\treturn rtn;\r\n\t\t})();\r\n\t\t\r\n\t\tvar bullets = (function()\r\n\t\t{\r\n\t\t\tvar ctor = function(ammo)\r\n\t\t\t{\r\n\t\t\t\tthis.arr = new Array(ammo);\r\n\t\t\t\tthis.id = 0;\r\n\t\t\t\tthis.coolDown = 0;\r\n\t\t\t\tthis.reload = 0;\r\n\t\t\t\tthis.reloadTime = 2000; // units: ms\r\n\t\t\t\tthis.coolDownTime = 200; // units: ms\r\n\t\t\t\tthis.nextToShow = 0;\r\n\t\t\t\t\r\n\t\t\t\tvar basic = function()\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.s = false;\t\t\t\t\t// bullet matrix\r\n\t\t\t\t\tthis.v = {'vert':0,'horz':0};\t// velocity\r\n\t\t\t\t\tthis.color = rgba(0,0,0);\t\t// color of bullet\r\n\t\t\t\t\tthis.impactFrame = 0;\t\t\t// frame when bullet will be inline with target\r\n\t\t\t\t\tthis.impactTime = 0;\t\t\t// frame when bullet will be inline with target\r\n\t\t\t\t};\r\n\t\t\t\t\r\n\t\t\t\tfor(var i = 0; i < ammo; ++i)\r\n\t\t\t\t\tthis.arr[i] = new basic();\r\n\t\t\t};\r\n\t\t\treturn [new ctor(10)];\r\n\t\t})();\r\n\t\t\r\n\t\tvar targets = (function()\r\n\t\t{\r\n\t\t    // l = #targets, d = distance between targets in terms of the height of each target, max = max speed of bullet\r\n\t\t\tvar ctor = function(l,d,max)\r\n\t\t\t{\r\n\t\t\t\tthis.arr = new Array(l);\r\n\t\t\t\tthis.color = [rgba(0,0,0),rgba(255,255,255),rgba(0,0,255),rgba(255,0,0),backgroundColor];\r\n\t\t\t\t\r\n\t\t\t\t// x and y form (x,y) the top left corner of target\r\n\t\t\t\tvar basic = function(x,y,w,h)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.s=[mat.homo_coor(\tmat.coor(0,y),\r\n\t\t\t\t\t\t\t\t\t\t\tmat.coor(x+2*w,y),\r\n\t\t\t\t\t\t\t\t\t\t\tmat.coor(x+2*w,y+h),\r\n\t\t\t\t\t\t\t\t\t\t\tmat.coor(0,y+h),\r\n\t\t\t\t\t\t\t\t\t\t\tmat.coor(0,y)),\r\n\t\t\t\t\t\t\tmat.homo_coor(\tmat.coor(x+w,y+h/7),\r\n\t\t\t\t\t\t\t\t\t\t\tmat.coor(x+2*w,y+h/7),\r\n\t\t\t\t\t\t\t\t\t\t\tmat.coor(x+2*w,y+h*6/7),\r\n\t\t\t\t\t\t\t\t\t\t\tmat.coor(x+w,y+h*6/7),\r\n\t\t\t\t\t\t\t\t\t\t\tmat.coor(x+w,y+h/7)),\r\n\t\t\t\t\t\t\tmat.homo_coor(\tmat.coor(x+w,y+h*2/7),\r\n\t\t\t\t\t\t\t\t\t\t\tmat.coor(x+2*w,y+h*2/7),\r\n\t\t\t\t\t\t\t\t\t\t\tmat.coor(x+2*w,y+h*5/7),\r\n\t\t\t\t\t\t\t\t\t\t\tmat.coor(x+w,y+h*5/7),\r\n\t\t\t\t\t\t\t\t\t\t\tmat.coor(x+w,y+h*2/7)),\r\n\t\t\t\t\t\t\tmat.homo_coor(\tmat.coor(x+w,y+h*3/7),\r\n\t\t\t\t\t\t\t\t\t\t\tmat.coor(x+2*w,y+h*3/7),\r\n\t\t\t\t\t\t\t\t\t\t\tmat.coor(x+2*w,y+h*4/7),\r\n\t\t\t\t\t\t\t\t\t\t\tmat.coor(x+w,y+h*4/7),\r\n\t\t\t\t\t\t\t\t\t\t\tmat.coor(x+w,y+h*3/7))];\r\n\t\t\t\t};\r\n\t\t\t\t/*\r\n                 * targets h pixels high and there are 2h pixels between each\r\n                 * target and 2h pixels above and below top/bottom targets\r\n                 * therefore h(3l+2) = mapHeight where l is number of targets\r\n                 * h = mapHeight/(3l+2)\r\n                 */\r\n                var width = mapWidth*1/200;\r\n                var height = mapHeight/(d+l+d*l);\r\n                \r\n                for(var i = 0; i < l; ++i)\r\n                {\r\n                    this.arr[i] = new basic(mapWidth/40,d*height + (d+1)*height*i,width,height);\r\n                }\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t// parameters for smh\r\n                this.distanceAbove = d*height; // pixels\r\n\t\t\t\tthis.v = 1; // pixels/ms\r\n\t\t\t\tthis.vMax = this.v; // pixels/ms\r\n\t\t\t\t// centerPos is vertical distance of the middle \r\n\t\t\t\t// of the middle target from the middle of the map\r\n\t\t\t\tthis.centerPos = 0; // pixels\r\n\t\t\t\t\r\n\t\t\t\tthis.move = function(dt)\r\n\t\t\t\t{\r\n                    /* targets move with shm,\r\n                     * vMax = 2*pi*f*A\r\n                     * a    = -(2*pi*f)^2*x\r\n                     *\r\n                     * f = vMax/(2*pi*A)\r\n                     * a = -(vMax/A)^2*x\r\n                     */\r\n                    for(var i = 0; i < dt; ++i)\r\n                    {\r\n                        var a = square(this.vMax/this.distanceAbove)*this.centerPos; // pixels/(ms)^2\r\n                        this.v -= a;\r\n                        this.centerPos += targets.v;\r\n                    }  \r\n                };\r\n                \r\n                // returns top/bottom positions of target at index i\r\n                this.top_bot = function(i)\r\n                {\r\n                    var top = this.centerPos + d*height + (d+1)*height*i;\r\n                    return {'top':top,'bot':top+height};\r\n                };\r\n\t\t\t\t\r\n                this.setMax = function(s)\r\n                {\r\n                    var upper = 10; lower = 0;\r\n                    var newMax = parseFloat(s);\r\n                    if(newMax >= lower && newMax <= upper)\r\n                    {\r\n                        var weightedMax = 0.5-0.5*Math.cos(newMax*toRad(180)/upper);\r\n                        requestAnimationFrame(function()\r\n                        {\r\n                            $(\"#targetBox\").css(\r\n                            {   \r\n                                'background-color':colorScale(rgba(255,70,34),rgba(25,138,25),weightedMax)\r\n                            });\r\n                            $(\"#targetMaxText\").text((newMax*150).toFixed());\r\n                        });\r\n                        this.v *= newMax/this.vMax;\r\n                        this.vMax = newMax;\r\n                        return true;\r\n                    }\r\n                    return false;\r\n                };\r\n                this.setMax(max);\r\n\t\t\t};\r\n\t\t\treturn new ctor(3,2.5,0.15);\r\n\t\t})();\r\n\t\t\r\n\t\tvar explosion = function(x,y,w,h,theta,v)\r\n\t\t{\r\n\t\t\tthis.s = mat.homo_coor(\tmat.coor_at_angle(x,y,0,0,theta),\r\n\t\t\t\t\t\t\t\t\tmat.coor_at_angle(x,y,w/3,h*2/5,theta),\r\n\t\t\t\t\t\t\t\t\tmat.coor_at_angle(x,y,w,h/2,theta),\r\n\t\t\t\t\t\t\t\t\tmat.coor_at_angle(x,y,w*2/3,h/4,theta),\r\n\t\t\t\t\t\t\t\t\tmat.coor_at_angle(x,y,w,0,theta),\r\n\t\t\t\t\t\t\t\t\tmat.coor_at_angle(x,y,w*2/3,-h/4,theta),\r\n\t\t\t\t\t\t\t\t\tmat.coor_at_angle(x,y,w,-h/2,theta),\r\n\t\t\t\t\t\t\t\t\tmat.coor_at_angle(x,y,w/3,-h*2/5,theta),\r\n\t\t\t\t\t\t\t\t\tmat.coor_at_angle(x,y,0,0,theta));\r\n\t\t\tthis.color = function()\r\n\t\t\t{\r\n\t\t\t    var o = (1 - this.opac)*10;\r\n\t\t\t    var a = o*Math.exp(1-o);\r\n\t\t\t    return rgba(255,0,0,a);\r\n\t\t\t};\r\n\t\t\tthis.v = {'vert':v.vert,'horz':v.horz};\r\n\t\t\tthis.opac = 1;\r\n\t\t};\r\n\t\t\r\n\t\tvar explosionObj = false;\r\n\t\t\r\n\t\t// ammo indicator\r\n\t\tvar setUpAmmo = function(table,totalAmmo,id)\r\n\t\t{\r\n\t\t\tvar row\t  = $(document.createElement(\"tr\"));\r\n\t\t\t\r\n\t\t\tfor(var a = totalAmmo-1; a >= 0; --a)\r\n\t\t\t{\r\n\t\t\t\tvar weightedAmmo = a/totalAmmo;\r\n\t\t\t\trow.append($(document.createElement(\"td\"))\r\n\t\t\t\t        .append($(document.createElement(\"div\")))\r\n\t\t\t\t    );\r\n\t\t\t}\r\n\t\t\ttable.append(row);\r\n\t\t};\r\n\t\tsetUpAmmo($(\"#ammo\"),10,\"ammoInd\");\r\n\t\t\r\n\t\t\r\n\t\tfunction getCenter(M)\r\n\t\t{\t\t\r\n\t\t\treturn {'x':M.get(0,2), 'y':M.get(1,2)};\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t$(document).mousemove(function(e)\r\n\t\t{\r\n\t\t\tlastMouse = e;\r\n\t\t}).mouseout(function()\r\n\t\t{\r\n\t\t\tlastMouse = 0;\r\n\t\t});\r\n\t\t\r\n\t\t$(document).keydown(function(event)\r\n\t\t{\r\n\t\t\tvar modifiers = event.altKey || event.ctrlKey || event.metaKey ||\r\n\t\t\t\t\t\t\tevent.shiftKey;\r\n\t\t\tvar toSet =\r\n\t\t\t{\r\n\t\t\t\t'background-color': 'black',\r\n\t\t\t\t'color': 'white'\r\n\t\t\t};\r\n\t\t\tif(!modifiers)\r\n\t\t\t{\r\n\t\t\t\tif(event.which === 13) // '\\n'\r\n\t\t\t\t{\r\n\t\t\t\t\t$(\"#startEng\").css(toSet);\r\n\t\t\t\t\tif(!userInputs.engineOn && tank.fuel > 0)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tsetEngOn();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tsetEngOff();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if(userInputs.engineOn)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(event.which === 13) // '\\n'\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$(\"#startEng\").css(toSet);\r\n\t\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(event.which == 87) // 'w'\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$(\"#gas\").css(toSet);\r\n\t\t\t\t\t\tuserInputs.gassing = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if(event.which == 83) // 's'\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$(\"#break\").css(toSet);\r\n\t\t\t\t\t\tuserInputs.breaking = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if(event.which === 32) // ' '\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$(\"#mainFire\").css(toSet);\r\n\t\t\t\t\t\tuserInputs.fireMain = true;\r\n                        event.preventDefault();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if(event.which === 81) // 'q'\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$(\"#mainReload\").css(toSet);\r\n\t\t\t\t\t\tuserInputs.reloadMain = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if(event.which === 67) // 'c'\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$(\"#changeTargetMax\").css(toSet).click();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\t\r\n\t\t});\r\n\t\t\r\n\t\tfunction setEngOff()\r\n\t\t{\r\n\t\t    if(userInputs.engineOn)\r\n\t\t    {\r\n        \t\tuserInputs.engineOn = false;\r\n        \t\tif(refuel.fueling)\r\n        \t\t{\r\n        \t\t    $(\"#fuelTitle\").html(\"Engine Off\");  \r\n                    $(\"#fuelBar\").css('opacity',1);\r\n        \t\t}\r\n        \t\telse\r\n        \t\t{\r\n                    $(\"#fuelTitle\").text(\"Engine Off\");\r\n                    $(\"#extraText\").text(\"Enter to start\");\r\n        \t\t\t$(\"#fuelBar\").css('opacity',0);\r\n        \t\t}\r\n        \t\tuserInputs.gassing = false;\r\n        \t\tuserInputs.breaking = false;\r\n        \t\tuserInputs.fireMain = false;\r\n            }\r\n\t\t}\r\n\t\t\r\n\t\tfunction setEngOn()\r\n\t\t{\r\n            if(!userInputs.engineOn)\r\n            {\r\n    \t\t\tuserInputs.engineOn = true;\r\n    \t\t\t$(\"#fuelTitle\").html(\"Fuel\");\r\n    \t\t\t$(\"#fuelBar\").css('opacity',1);\r\n    \t\t}\r\n\t\t}\r\n\t\t\t\r\n\t\tsetEngOn();\t\r\n\t\t\r\n\t\tvar currentlyChangingMaxSpeed = false;\r\n\t\t\r\n\t\t$(document).keyup(function(event)\r\n\t\t{\r\n\t\t\tvar modifiers = event.altKey || event.ctrlKey || event.metaKey ||\r\n\t\t\t\t\t\t\tevent.shiftKey;\r\n\t\t\t\t\t\t\t\r\n\t\t\tvar toSet =\r\n\t\t\t{\r\n\t\t\t\t'background-color':'',\r\n\t\t\t\t'color': ''\r\n\t\t\t};\r\n\t\t\tif(!modifiers)\r\n\t\t\t{\t\r\n\t\t\t\tif(event.which === 87) // 'w'\r\n\t\t\t\t{\r\n\t\t\t\t\t$(\"#gas\").css(toSet);\r\n\t\t\t\t\tuserInputs.gassing = false;\r\n\t\t\t\t}\r\n\t\t\t\telse if(event.which === 83) // 's'\r\n\t\t\t\t{\r\n\t\t\t\t\t$(\"#break\").css(toSet);\r\n\t\t\t\t\tuserInputs.breaking = false;\r\n\t\t\t\t}\r\n\t\t\t\telse if(event.which === 32) // ' '\r\n\t\t\t\t{\r\n\t\t\t\t\t$(\"#mainFire\").css(toSet);\r\n\t\t\t\t\tuserInputs.fireMain = false;\r\n\t\t\t\t}\r\n\t\t\t\telse if(event.which === 81) // 'q'\r\n\t\t\t\t{\r\n\t\t\t\t\t$(\"#mainReload\").css(toSet);\r\n\t\t\t\t}\r\n\t\t\t\tif(event.which === 13 && !currentlyChangingMaxSpeed) // '\\n'\r\n\t\t\t\t{\r\n\t\t\t\t\t$(\"#startEng\").css(toSet);\r\n\t\t\t\t}\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\tfunction doKeyHelp(id,norm,key,down,up)\r\n\t\t{\r\n\t\t\tvar el = $(id);\r\n\t\t\tel.text(norm);\r\n\t\t\tel.mouseenter(function()\r\n\t\t\t{\r\n\t\t\t\tel.text (\"Press \" + key);\r\n\t\t\t}).mouseleave (function()\r\n\t\t\t{\r\n\t\t\t\tel.text(norm);\r\n\t\t\t\tup();\r\n\t\t\t}).mousedown(down).mouseup(up);\r\n\t\t}\r\n        var userInputs = {\r\n        gassing: false,\r\n        breaking: false,\r\n        fireMain: false,\r\n        reloadMain: false,\r\n        engineOn: true };\r\n\t\t\r\n\t\tdoKeyHelp(\"#gas\", \"GAS\", \"'W'\", \r\n    \t\t  function(){ userInputs.gassing = userInputs.engineOn; }, \r\n    \t\t  function(){ userInputs.gassing = false; });\r\n\t\tdoKeyHelp(\"#break\", \"BREAK\", \"'S'\", \r\n    \t\tfunction(){ userInputs.breaking = userInputs.engineOn; }, \r\n    \t\tfunction(){ userInputs.breaking = false; });\r\n\t\tdoKeyHelp(\"#mainFire\", \"FIRE\", \"space\", \r\n    \t\tfunction(){ userInputs.fireMain = userInputs.engineOn; }, \r\n    \t\tfunction(){ userInputs.fireMain = false; });\r\n\t\tdoKeyHelp(\"#mainReload\", \"RELOAD\", \"'Q'\", \r\n    \t\tfunction(){ userInputs.reloadMain = userInputs.engineOn; }, \r\n    \t\tfunction(){});\r\n\t\tdoKeyHelp(\"#startEng\", \"START/STOP ENGINE\", \"'enter'\", \r\n    \t\tfunction()\r\n    \t\t{\r\n                if(!userInputs.engineOn && tank.fuel > 0)\r\n                {\r\n                    setEngOn();\r\n                }\r\n                else\r\n                {\r\n                    setEngOff();\r\n                };\r\n            },\r\n            function() {});\r\n\t\tdoKeyHelp(\"#changeTargetMax\", \"Change Max Speed\", \"'C'\", function()\r\n\t\t{\r\n\t\t    if(!targets.setMax(prompt(\"Max speed of targets: (between 0 and 50)\",this.vMax*150)))\r\n            {\r\n                requestAnimationFrame(function()\r\n                {\r\n                    $(\"#normalTargetBox\").css(\r\n                    {\r\n                        'display': 'none'\r\n                    });\r\n                    $(\"#alternativeTargetBox\").css(\r\n                    {\r\n                        'display': 'block'\r\n                    });\r\n                });\r\n                setTimeout(function()\r\n                {\r\n                    requestAnimationFrame(function()\r\n                    {\r\n                        $(\"#normalTargetBox\").css(\r\n                        {\r\n                            'display': 'block'\r\n                        });\r\n                        $(\"#alternativeTargetBox\").css(\r\n                        {\r\n                            'display': 'none'\r\n                        });\r\n                    });\r\n                },1000);\r\n            }\r\n            $(\"#changeTargetMax\").css(\r\n            {\r\n                'background-color':'transparent',\r\n                'color': 'black'\r\n            });\r\n\t\t},function(){});\r\n\t\t\r\n\t\tvar skidRatio = 0;\r\n\t\tvar displayedSpeed = 0;\r\n\t\tvar reverse = false;\r\n\t\tvar gasClockCount = 0;\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\tvar direction = 0; // angle of tank\r\n\t\tvar gunAngle = 0; // angle of tank's gun\r\n\t\tvar angleChange = 0; // angle of tank\r\n\t\tvar gunChange = 0; // angle of tank's gun\r\n\t\t\r\n\t\tvar trackProb = 0;\r\n\t\tvar expK = Math.exp(0.005);\r\n\t\t\r\n\t\tvar runCount = 0, turnCount = 0;\r\n\t\tvar hitCount = 0;\r\n\t\t\r\n\t\tvar frameTime = 0;\r\n\t\tvar beginTime = 0;\r\n\t\t\r\n\t\t\r\n\t\tmapCtx.font = \"bold 18pt Courier New\";\r\n\t\tmapCtx.fillText(\"Move the mouse to start!\",400,100);\r\n\t\t\t\t\r\n\t\tvar run = function()\r\n\t\t{\t\r\n            requestAnimationFrame(run);\r\n            var now = performance.now(),\r\n                dt = now - (frameTime || now);\r\n            frameTime = now;\r\n\t\t\tif(lastMouse)\r\n\t\t\t{\r\n\t\t\t\trunCount++;\r\n\t\t\t\t// refuel\r\n\t\t\t\t(function()\r\n\t\t\t\t{\r\n\t\t\t\t\t// corners of tank\r\n\t\t\t\t\tvar a = mat.coor(tank.s[0].get(0,0),tank.s[0].get(1,0));\r\n\t\t\t\t\tvar b = mat.coor(tank.s[0].get(0,1),tank.s[0].get(1,1));\r\n\t\t\t\t\tvar c = mat.coor(tank.s[0].get(0,3),tank.s[0].get(1,3));\r\n\t\t\t\t\tvar d = mat.coor(tank.s[0].get(0,4),tank.s[0].get(1,4));\r\n\t\t\t\t\t\r\n\t\t\t\t\t// corners of the fuel station\r\n\t\t\t\t\tvar A = mat.coor(refuel.s.get(0,0),refuel.s.get(1,0));\r\n\t\t\t\t\tvar B = mat.coor(refuel.s.get(0,1),refuel.s.get(1,1));\r\n\t\t\t\t\tvar C = mat.coor(refuel.s.get(0,2),refuel.s.get(1,2));\r\n\t\t\t\t\tvar D = mat.coor(refuel.s.get(0,3),refuel.s.get(1,3));\r\n\t\t\t\t\t\r\n\t\t\t\t\tif( a.x <= C.x && a.y <= C.y &&\r\n\t\t\t\t\t\tb.x >= D.x && b.y <= D.y &&\r\n\t\t\t\t\t\tc.x >= A.x && c.y >= A.y &&\r\n\t\t\t\t\t\td.x <= B.x && d.y >= B.y &&\r\n\t\t\t\t\t\t\t// tank must be facing left\r\n\t\t\t\t\t\t\ta.x > b.x\t\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif(!refuel.fueling)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\trefuel.fueling = true;\r\n\t\t\t\t\t\t\t$(\"#fuelTitle\").html(\"switch engine\");\r\n\t\t\t\t\t\t\t$(\"#extraText\").text(\"off to refuel\");\r\n                            $(\"#fuelBar\").css('opacity',0);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif(refuel.fueling)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\trefuel.fueling = false;\t\r\n\t\t\t\t\t\t\tif(userInputs.engineOn)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t$(\"#fuelTitle\").html(\"Fuel\");\t\r\n                                $(\"#fuelBar\").css('opacity',1);\r\n                            }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t})();\r\n\t\t\t\t\r\n\t\t\t\t\r\n                // constant which corresponds to max pixels per second\r\n                var maxV = 0.2;\r\n                // speed is magnitude of velocity (negative if reversing)\r\n                var speed = Math.sqrt(tank.v.vert*tank.v.vert+tank.v.horz*tank.v.horz)/(reverse ? -maxV : maxV);\r\n\t\t\t\t\r\n\t\t\t\t// reload main gun\r\n\t\t\t\tif(userInputs.reloadMain)\r\n\t\t\t\t{   \r\n\t\t\t\t\t// start the reload\r\n\t\t\t\t\tif(!bullets[0].reload)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tbullets[0].nextToShow = 0;\r\n\t\t\t\t\t\tbullets[0].reload = bullets[0].reloadTime;\r\n\t\t\t\t\t\t// hide all ammo boxes if ammo was not empty before reload\r\n\t\t\t\t\t\t$(\"#ammo td > div\").css(\r\n\t\t\t\t\t\t{\r\n                            'background-color':'transparent'\r\n    \t\t\t\t\t});\r\n    \t\t\t\t\t$(\"#requestReload\").css(\r\n                        {\r\n                            'color':''\r\n                        });\r\n\t\t\t\t\t}\r\n                    if(bullets[0].reload <= dt)\r\n                    {\r\n                        userInputs.reloadMain = false;\r\n                        bullets[0].id = 0;\r\n                        $(\"#requestReload\").hide();\r\n                        $(\"#mainAmmoTitle\").show();\r\n                        bullets[0].reload = 0;\r\n                    }\r\n                    else \r\n                    {\r\n                        bullets[0].reload -= dt;\r\n                    }\r\n\t\t\t\t\tif(bullets[0].nextToShow/bullets[0].arr.length <= 1-bullets[0].reload/bullets[0].reloadTime)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$(\"#ammo td:nth-child(\" + bullets[0].nextToShow + \") > div\").css(\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t'background-color':''\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\t++bullets[0].nextToShow;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\t// fire main gun\r\n\t\t\t\t\tif(bullets[0].cooldown >= 0)\r\n\t\t\t\t\t\tbullets[0].cooldown -= dt;\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif(userInputs.fireMain)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tbullets[0].cooldown = bullets[0].coolDownTime-dt;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t// corners of the main gun\r\n\t\t\t\t\t\t\tvar a = mat.coor(tank.s[tank.s.length-1].get(0,0),tank.s[tank.s.length-1].get(1,0));\r\n\t\t\t\t\t\t\tvar b = mat.coor(tank.s[tank.s.length-1].get(0,1),tank.s[tank.s.length-1].get(1,1));\r\n\t\t\t\t\t\t\tvar c = mat.coor(tank.s[tank.s.length-1].get(0,2),tank.s[tank.s.length-1].get(1,2));\r\n\t\t\t\t\t\t\tvar d = mat.coor(tank.s[tank.s.length-1].get(0,3),tank.s[tank.s.length-1].get(1,3));\r\n\t\t\t\t\t\t\t// check if no ammo is left\r\n\t\t\t\t\t\t\tif(bullets[0].id == bullets[0].arr.length)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t$(\"#mainAmmoTitle\").hide();\r\n                                $(\"#requestReload\").show();\r\n                                // flash text and (now empty) ammo boxes red\r\n                                setTimeout(function()\r\n                                {\r\n                                    requestAnimationFrame(function()\r\n                                    {\r\n                                        $(\"#requestReload\").css(\r\n                                        {\r\n                                            'color':''\r\n                                        });\r\n                                        $(\"#ammo td > div\").css(\r\n                                        {\r\n                                           'background-color':'transparent' \r\n                                        });\r\n                                    });\r\n                                }, 200);\r\n\t\t\t\t\t\t\t\t$(\"#requestReload\").css(\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t'color':'red'\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t$(\"#ammo td > div\").css(\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t   'background-color':'red' \r\n\t\t\t\t\t\t\t\t}); \r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t{\r\n                                beginTime = frameTime;\r\n                            \r\n\t\t\t\t\t\t\t\tbullets[0].arr[bullets[0].id].s = \r\n\t\t\t\t\t\t\t\t\tmat.homo_coor(\tmat.coor(0.9*b.x+0.1*c.x,0.9*b.y+0.1*c.y), // top right\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmat.coor(-0.225*a.x+1.125*b.x+0.125*c.x-0.025*d.x,-0.225*a.y+1.125*b.y+0.125*c.y-0.025*d.y), // top left\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmat.coor(-0.2*a.x+0.7*b.x+0.7*c.x-0.2*d.x,-0.2*a.y+0.7*b.y+0.7*c.y-0.2*d.y), // middle left\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmat.coor(-0.025*a.x+0.125*b.x+1.125*c.x-0.225*d.x,-0.025*a.y+0.125*b.y+1.125*c.y-0.225*d.y), // bottom left\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmat.coor(0.1*b.x+0.9*c.x,0.1*b.y+0.9*c.y), // bottom right\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmat.coor(0.9*b.x+0.1*c.x,0.9*b.y+0.1*c.y));\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t// give bullet velocity\r\n\t\t\t\t\t\t\t\tbullets[0].arr[bullets[0].id].v.vert = tank.v.vert - Math.sin(gunAngle)*1.5;\r\n\t\t\t\t\t\t\t\tbullets[0].arr[bullets[0].id].v.horz = tank.v.horz + Math.cos(gunAngle)*1.5;\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tbullets[0].arr[bullets[0].id].color = rgba(0,0,0);\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t// make explosion\r\n\t\t\t\t\t\t\t\texplosionObj = new explosion(0.4*b.x+0.4*c.x+0.1*a.x+0.1*d.x,0.5*b.y+0.5*c.y,15,7,-gunAngle,tank.v);\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t// find frame when bullet will hit target\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t// x-coor of front of target (furthest right)\r\n\t\t\t\t\t\t\t\tvar targetX = targets.arr[0].s[0].get(0,1);\r\n\t\t\t\t\t\t\t\t// x-coor of front of bullet (furthest left)\r\n\t\t\t\t\t\t\t\tvar bulletX = bullets[0].arr[bullets[0].id].s.get(0,2);\r\n\t\t\t\t\t\t\t\t// given time = distance / speed;\r\n\t\t\t\t\t\t\t\tbullets[0].arr[bullets[0].id].impactFrame = frameId + Math.ceil((targetX - bulletX)/bullets[0].arr[bullets[0].id].v.horz);\r\n\t\t\t\t\t\t\t\tbullets[0].arr[bullets[0].id].impactTime = frameTime + ((targetX - bulletX)/bullets[0].arr[bullets[0].id].v.horz);\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\r\n                                tank.recoil.vert = 0.055 * Math.sin(gunAngle);\r\n                                tank.recoil.horz = 0.055 * Math.cos(gunAngle);\r\n                                var gunWRTtank = (gunAngle-direction)/Math.PI;\r\n                                if(gunWRTtank < 0)\r\n                                    gunWRTtank += 2;\r\n                                speed += gunWRTtank < 0.5 || gunWRTtank > 1.5 ? -0.02 : +0.02;\r\n\r\n\t\t\t\t\t\t\t\t$(\"#ammo td:nth-child(\" + (bullets[0].arr.length-bullets[0].id) + \") > div\").css(\r\n                                {\r\n                                    'background-color':'transparent'\r\n                                });\r\n                                ++bullets[0].id;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// check if any bullets have hit target\r\n\t\t\t\tfor(var i = 0; i < bullets[0].arr.length; ++i)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(bullets[0].arr[i].s\t\t\t\t\t\t\t\t// bullet exists\r\n\t\t\t\t\t\t&& bullets[0].arr[i].impactTime <= frameTime  \t// this is the frame when the bullet could hit\r\n\t\t\t\t\t\t&& bullets[0].arr[i].v.horz < 0   \t\t\t\t// bullet must also be going left\r\n\t\t\t\t\t\t&& bullets[0].arr[i].s.get(0,0) > 0)            // bullet is still on map\r\n\t\t\t\t\t{\r\n\t\t\t\t\t    $(\"#bah\").text((bullets[0].arr[i].impactTime-frameTime).toPrecision(3) );\r\n\t\t\t\t\t\t// find top/bottom of bullet\r\n\t\t\t\t\t\tvar bulletTop = bullets[0].arr[i].s.get(1,1);\r\n\t\t\t\t\t\tvar bulletBot = bullets[0].arr[i].s.get(1,3);\t\r\n\t\t\t\t\t\tif(bulletTop > bulletBot)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tvar tmp = bulletTop;\r\n\t\t\t\t\t\t\tbulletTop = bulletBot;\r\n\t\t\t\t\t\t\tbulletBot = tmp;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// for each target check if target is hit it\r\n\t\t\t\t\t\tfor(var j = 0; j < targets.arr.length; ++j)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t// top/bottom of target\r\n\t\t\t\t\t\t\tvar targetPos = targets.top_bot(j);\r\n\t\t\t\t\t\t      \r\n\t\t\t\t\t\t\t\r\n                            if(bulletTop < targetPos.bot && bulletBot > targetPos.top)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t// make bullet hole\r\n\t\t\t\t\t\t\t\t//targets.arr[j].hole = bullets[0].arr[i].s;\r\n\t\t\t\t\t\t\t\tbullets[0].arr[i].s = false; // remove bullet\r\n\t\t\t\t\t\t\t\tj = targets.arr.length; \t// end loop\r\n\t\t\t\t\t\t\t\t++hitCount;\r\n\t\t\t\t\t\t\t\t$(\"#score\").html(hitCount + '<div class=\"addition\">+1</div>');\r\n\t\t\t\t\t\t\t\tif(hitCount > bestScore)\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t    $(\"#bestscore\").html(hitCount + '<div class=\"addition\">+1</div>');\r\n\t\t\t\t\t\t\t\t    setBestScore(hitCount);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// move tank\r\n\t\t\t\tvar tankTransform;\r\n\t\t\t\tvar gunTransform;\r\n\t\t\t\tvar turnsPerSec = 45;\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\tvar slowAmount = .02; // reduce velocity by 2%\r\n\t\t\t\t\r\n\t\t\t\tif(!userInputs.engineOn || (userInputs.breaking && speed > 0))\r\n\t\t        {\r\n\t\t            // if breaking (or engine stopped) slow down faster\r\n\t\t\t\t\tslowAmount *= 2; \r\n\t\t\t\t}\r\n\t\t\t\r\n\t\t\t\tvar adjuster = 1;\r\n\t\t\t\tif(speed < 1/3)\r\n\t\t\t\t{\r\n\t\t\t\t\t// adjuster is value that slows down initial acceleration to increase ability to control tank\r\n\t\t\t\t\tadjuster *= 0.25 * (7/3 - Math.cos(toRad(180)*4*speed));\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// if breaking and gassing then tank will break\t\r\n\t\t\t\tif(userInputs.breaking)\r\n\t\t\t\t{\r\n\t\t\t\t    // reduces speed\r\n                    speed -= adjuster * slowAmount;\r\n\t\t\t\t}\r\n\t\t\t\telse if(userInputs.gassing)\r\n\t\t\t\t{\t\r\n\t\t\t\t    // increases speed\r\n\t\t\t\t\tspeed += adjuster * slowAmount;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tspeed = speed*(1-slowAmount);   \r\n                tank.recoil.vert *= 1-10*slowAmount;\r\n                tank.recoil.horz *= 1-10*slowAmount;\r\n                \r\n                // reduce handling at high speeds\r\n\t\t\t\tvar skidder = 0.98;\r\n\t\t\t\tskidRatio *= skidder;\r\n\t\t\t\tif(userInputs.gassing)\r\n\t\t\t\t{\r\n                \tif(Math.abs(angleChange*turnsPerSec/7.5) > 0.7)\r\n                \t{\r\n                \t\tskidRatio += (1-skidder);\r\n                \t}\r\n                \telse if(Math.abs(angleChange*turnsPerSec/7.5) > 0.4)\r\n                \t{\r\n                \t\tskidRatio += (1-skidder)/2;\r\n                \t}\r\n                }\r\n                \r\n                \r\n                var a = (1-skidRatio)*speed;\r\n\t\t\t\ttank.v.vert *= skidRatio;\r\n                tank.v.horz *= skidRatio;\r\n\t\t\t\ttank.v.vert += (a*Math.sin(direction) - tank.recoil.vert)*maxV;\r\n\t\t\t\ttank.v.horz += (a*Math.cos(direction) - tank.recoil.horz)*maxV;\r\n\t\t\t\t\r\n\t\t\t\t// i.e. tank is going backwards\r\n                reverse = speed < 0;\r\n                \r\n\t\t        var newDisplayableSpeed = Math.round(speed*30);\r\n\t\t        if(newDisplayableSpeed != displayedSpeed)\r\n\t\t        {\r\n                    var weightedSpeed = 0.5-0.5*Math.cos(speed*toRad(180));\r\n                    $(\"#speedBox\").css(\r\n                    {   \r\n                        'background-color':colorScale(rgba(255,70,34),rgba(25,138,25),weightedSpeed)\r\n                    });\r\n                    $(\"#speedText\").html(Math.abs(newDisplayableSpeed));\r\n                    displayedSpeed = newDisplayableSpeed;\r\n\t            }\r\n\t            // refuel tank if in correct position and engine is off\r\n\t\t\t\tif(refuel.fueling && !userInputs.engineOn)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(tank.fuel + 2e-4 * dt < 1)\r\n                        tank.fuel += 2e-4 * dt;\r\n\t\t\t\t\telse if(tank.fuel < 1)\r\n\t\t\t\t\t{\r\n                        tank.fuel = 1.0;\r\n                        $(\"#fuelTitle\").text(\"Engine Off\");\r\n                        $(\"#extraText\").text(\"Enter to start\");\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if(userInputs.engineOn)\r\n\t\t\t\t{\r\n\t\t\t\t\t// lose 10^-5 of fuel per milisecond and also lose upto 4*10^-5 of fuel per milisecond based on speed\r\n\t\t\t\t\ttank.fuel -= (1 + 4*square(speed))*1e-5*dt;\r\n\t\t\t\t}\r\n\t\t\t\tif(tank.fuel < 0) \r\n\t\t\t\t{\r\n\t\t\t\t    userInputs.engineOn = false;\r\n                    if(refuel.fueling)\r\n                    {\r\n                        $(\"#fuelTitle\").html(\"Engine Off\");  \r\n                        $(\"#fuelBar\").css('opacity',1);\r\n                    }\r\n                    else\r\n                    {\r\n                        $(\"#fuelTitle\").text(\"Engine Off\");\r\n                        $(\"#extraText\").text(\"Out of fuel!\");\r\n                        $(\"#fuelBar\").css('opacity',0);\r\n                    }\r\n                    userInputs.gassing = false;\r\n                    userInputs.breaking = false;\r\n                    userInputs.fireMain = false;\r\n\t\t\t\t    tank.fuel = 0;\r\n\t\t\t\t}\r\n\t\t\t\tif(tank.outputtedFuel !=  ~~(tank.fuel*100))\r\n\t\t\t\t{\r\n\t\t\t\t    tank.outputtedFuel = ~~(tank.fuel*100);\r\n\t\t\t\t\t$(\"#fuelPercent\").html(tank.outputtedFuel);\r\n\t\t\t\t\t$(\"#slider\").css(\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t'width': tank.outputtedFuel + \"%\"\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\ttankTransform = mat.translate(tank.v.horz*dt,-tank.v.vert*dt);\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t// then turn the tank\t\r\n\t\t\t\t\r\n\t\t\t\tvar turnProb = turnsPerSec/runsPerSec;\r\n\t\t\t\t\t\r\n\t\t\t\tvar tankC = getCenter(tank.s[0]);\r\n\t\t\t\tvar mapPos = mapEl.offset();\r\n\t\t\t\tvar mouseDistX =  lastMouse.pageX - tankC.x - mapPos.left;\r\n\t\t\t\tvar mouseDistY =  lastMouse.pageY - tankC.y - mapPos.top;\r\n\t\t\t\t\r\n\t\t\t\tvar angle = Math.atan2(-mouseDistY,mouseDistX);\r\n\t\t\t\tif(angle < 0)\r\n\t\t\t\t\tangle += toRad(360);\r\n\t\t\t\t\r\n\t\t\t\t// turn the main gun\r\n\t\t\t\t(function()\r\n\t\t\t\t{\t\t\r\n\t\t\t\t\tvar diff = angle - gunAngle;\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(diff < toRad(-180))\r\n\t\t\t\t\t\tdiff += toRad(360);\r\n\t\t\t\t\telse if(diff > toRad(180))\r\n\t\t\t\t\t\tdiff -= toRad(360);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\tgunChange = userInputs.engineOn * 10 / turnsPerSec * sgn(diff) * (1 - Math.exp(-Math.abs(diff)));\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\tgunAngle += gunChange;\r\n\t\t\t\t\t\r\n\t\t\t\t\tgunAngle %= toRad(360);\r\n\t\t\t\t\tif(gunAngle < 0)\r\n\t\t\t\t\t\tgunAngle += toRad(360);\r\n\t\t\t\t\t\r\n\t\t\t\t\tgunTransform = mat.mult(tankTransform,mat.rotate(gunChange,tankC.x,tankC.y));\r\n\t\t\t\t})();\r\n\t\t\t\t// turn tank less often than gun and let the amount turned be effected by speed\r\n\t\t\t\tif(Math.random() < turnsPerSec/runsPerSec)\r\n\t\t\t\t{\t\t\r\n\t\t\t\t\tvar diff = angle - direction;\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(diff < toRad(-180))\r\n\t\t\t\t\t\tdiff += toRad(360);\r\n\t\t\t\t\telse if(diff > toRad(180))\r\n\t\t\t\t\t\tdiff -= toRad(360);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\tangleChange = userInputs.engineOn * 7.5 / turnsPerSec * sgn(diff) * (1 - Math.exp(-Math.abs(diff))) * Math.abs(speed);\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(turnProb > 1)\r\n\t\t\t\t\t\tangleChange *= turnProb;\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\tdirection += angleChange;\r\n\t\t\t\t\t\r\n\t\t\t\t\tdirection %= toRad(360);\r\n\t\t\t\t\tif(direction < 0)\r\n\t\t\t\t\t\tdirection += toRad(360);\r\n\t\t\t\t\t\r\n\t\t\t\t\ttankTransform = mat.mult(tankTransform,mat.rotate(angleChange,tankC.x,tankC.y));\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t// fade existing tracks\r\n\t\t\t\tvar tracksPerSec = 5;\r\n\t\t\t\tvar trackTimeTillDie = tracks.arr.length / tracksPerSec;\r\n\t\t\t\tvar fadePerRun = 1/(trackTimeTillDie * runsPerSec);\r\n\t\t\t\t\r\n\t\t\t\tfor(var i = 0; i < tracks.arr.length; ++i)\r\n\t\t\t\t\ttracks.arr[i].opac -= fadePerRun * 100;\r\n\t\t\t\t\r\n\t\t\t\t// put down tracks\r\n                if(trackProb*2*Math.random() < runsPerSec/tracksPerSec || (speed < 0.01)) // timings per sec\r\n                {\r\n                    trackProb += 1;\r\n                }\r\n                else\r\n                {\r\n                    trackProb = 0;\r\n\t\t\t\t\t// put down a pair of tracks\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t// corners of tank\r\n\t\t\t\t\tvar a = mat.coor(tank.s[0].get(0,0),tank.s[0].get(1,0));\r\n\t\t\t\t\tvar b = mat.coor(tank.s[0].get(0,1),tank.s[0].get(1,1));\r\n\t\t\t\t\tvar c = mat.coor(tank.s[0].get(0,3),tank.s[0].get(1,3));\r\n\t\t\t\t\tvar d = mat.coor(tank.s[0].get(0,4),tank.s[0].get(1,4));\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(tracks.id >= tracks.arr.length)\r\n\t\t\t\t\t\ttracks.id = 0;\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar trackLen = Math.sqrt(speed) / 2;\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t// tracks are 1/5 of width and 1/4 of height\t\t\t\r\n\t\t\t\t\ttracks.arr[tracks.id].left = mat.homo_coor(mat.coor((4*a.x+d.x)/5,(4*a.y+d.y)/5),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmat.coor(\t((1-trackLen)*(4*a.x+d.x)+trackLen*(4*b.x+c.x))/5,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t((1-trackLen)*(4*a.y+d.y)+trackLen*(4*b.y+c.y))/5),\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmat.coor(\t((1-trackLen)*(3*a.x+2*d.x)+trackLen*(3*b.x+2*c.x))/5,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t((1-trackLen)*(3*a.y+2*d.y)+trackLen*(3*b.y+2*c.y))/5),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmat.coor((3*a.x+2*d.x)/5,(3*a.y+2*d.y)/5));\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\ttracks.arr[tracks.id].right = mat.homo_coor(mat.coor((a.x+4*d.x)/5,(a.y+4*d.y)/5),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmat.coor(\t((1-trackLen)*(a.x+4*d.x)+trackLen*(b.x+4*c.x))/5,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t((1-trackLen)*(a.y+4*d.y)+trackLen*(b.y+4*c.y))/5),\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmat.coor(\t((1-trackLen)*(2*a.x+3*d.x)+trackLen*(2*b.x+3*c.x))/5,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t((1-trackLen)*(2*a.y+3*d.y)+trackLen*(2*b.y+3*c.y))/5),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmat.coor((2*a.x+3*d.x)/5,(2*a.y+3*d.y)/5));\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\ttracks.arr[tracks.id].opac = 100;\r\n\t\t\t\t\t\r\n\t\t\t\t\t++tracks.id;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t// move tank\r\n\t\t\t\tfor(var i=0;i<tank.s.length-1;++i)\r\n\t\t\t\t\ttank.s[i] = mat.mult(tankTransform,tank.s[i]);\r\n\t\t\t\t//move gun separately\r\n\t\t\t\ttank.s[tank.s.length-1] = mat.mult(gunTransform,tank.s[tank.s.length-1]);\r\n\t\t\t\t\t\r\n\t\t\t\t// move bullets\r\n\t\t\t\tfor(var i = 0; i < bullets.length; ++i)\r\n\t\t\t\t{\r\n\t\t\t\t\tfor(var j = 0; j < bullets[i].arr.length; ++j)\r\n\t\t\t\t\t{\t\r\n\t\t\t\t\t\tif(bullets[i].arr[j].s)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tvar m = mat.translate(bullets[i].arr[j].v.horz*dt,bullets[i].arr[j].v.vert*dt);\r\n\t\t\t\t\t\t\tbullets[i].arr[j].s = mat.mult(m,bullets[i].arr[j].s);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\t\r\n\t\t\t\t\r\n\t\t\t\t// move targets\r\n\t\t\t\ttargets.move(dt);\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t// fade explosion\r\n\t\t\t\tif(explosionObj)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(explosionObj.opac >= 1/20) // scale with time\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tvar fadePerRun = 1/(0.1 * runsPerSec);\r\n\t\t\t\t\t\texplosionObj.opac -= 1/20;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse explosionObj.opac = 0;\r\n\t\t\t\t}\r\n\t\t\t\t// move explosion\r\n\t\t\t\t\t\r\n\t\t\t\tif(explosionObj && explosionObj.opac > 0)\r\n\t\t\t\t{\t\r\n\t\t\t\t\tvar m = mat.translate(explosionObj.v.horz,-explosionObj.v.vert);\r\n\t\t\t\t\texplosionObj.s = mat.mult(m,explosionObj.s);\r\n\t\t\t\t}\r\n\t\t\t\tupdateTankPos(dt);\r\n\t\t\t}\r\n\t\t\t++frameId;\r\n\t\t};\r\n\t\trun();\r\n\t\t\r\n\t\tfunction plotTankPart(i)\r\n\t\t{\r\n\t\t\tmapCtx.fillStyle = makeGrey(tank.colors[i],userInputs.engineOn);\r\n\t\t\tmapCtx.beginPath();\r\n\t\t\tmat.plot(mapCtx,tank.s[i]);\r\n\t\t\tmapCtx.fill();\r\n\t\t}\r\n\t\t\r\n\t\tfunction updateTankPos(dt)\r\n\t\t{\r\n\t\t\t// clear canvas\r\n\t\t\tmapCtx.fillStyle = makeGrey(backgroundColor,userInputs.engineOn);\r\n\t\t\tmapCtx.rect(0,0,mapWidth,mapHeight);\r\n\t\t\tmapCtx.fill();\r\n\t\t\t\r\n\t\t\t// flash warning if fuel less than 10\t\t\r\n\t\t\tif(!refuel.fueling && tank.fuel > 0 && \r\n\t\t\t    ((tank.fuel < 0.1 && tank.fuel > 0.05 && tank.fuel % 0.02 > 0.01) || \r\n\t\t\t         (tank.fuel < 0.05 && tank.fuel % 0.01 > 0.005)\r\n\t\t\t    )\r\n\t\t\t  )\r\n\t\t\t{\r\n\t\t\t\tvar gradient=mapCtx.createLinearGradient(0,0,mapWidth,0);\r\n\t\t\t\tgradient.addColorStop(0.,\"#FF6666\");\r\n\t\t\t\tgradient.addColorStop(0.05,\"transparent\");\r\n\t\t\t\tgradient.addColorStop(0.95,\"transparent\");\r\n\t\t\t\tgradient.addColorStop(1.0,\"#FF6666\");\r\n\r\n\t\t\t\t// Fill with gradient\r\n\t\t\t\tmapCtx.fillStyle=gradient;\r\n\t\t\t\tmapCtx.lineWidth=5;\r\n\t\t\t\tmapCtx.fillRect(0,0,mapWidth,mapHeight);\r\n\r\n\t\t\t\tvar gradient=mapCtx.createLinearGradient(0,0,0,mapHeight);\r\n\t\t\t\tgradient.addColorStop(0.,\"#FF6666\");\r\n\t\t\t\tgradient.addColorStop(0.05,\"transparent\");\r\n\t\t\t\tgradient.addColorStop(0.95,\"transparent\");\r\n\t\t\t\tgradient.addColorStop(1.0,\"#FF6666\");\r\n\r\n\t\t\t\t// Fill with gradient\r\n\t\t\t\tmapCtx.fillStyle=gradient;\r\n\t\t\t\tmapCtx.lineWidth=5;\r\n\t\t\t\tmapCtx.fillRect(0,0,mapWidth,mapHeight);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// plot refuel text\r\n\t\t\tmapCtx.font = '15pt Courier New';\r\n\t\t\tmapCtx.fillStyle = makeGrey(refuel.color,userInputs.engineOn);\r\n\t\t\tmapCtx.fillText('Refuel Here',Math.ceil(refuel.s.get(0,0)),Math.ceil(refuel.s.get(1,0)-15));\r\n\t\t\t// plot refuel area\r\n\t\t\tmapCtx.lineWidth = 3;\r\n\t\t\tmapCtx.fillStyle = (refuel.fueling ? makeGrey(refuel.color,userInputs.engineOn): rgba(255,255,255));\r\n\t\t\tmapCtx.strokeStyle = (refuel.fueling ? 'transparent' : rgba(255,255,255));\r\n\t\t\tmapCtx.beginPath();\r\n\t\t\tmat.plot(mapCtx,refuel.s);\r\n\t\t\tmapCtx.fill();\r\n\t\t\tmapCtx.stroke();\r\n\t\t\t// dashed border\r\n\t\t\tmapCtx.strokeStyle = makeGrey(refuel.color,userInputs.engineOn);\r\n\t\t\tmapCtx.beginPath();\r\n\t\t\tfor(var i = 1; i < refuel.s.w(); ++i)\r\n\t\t\t{\r\n\t\t\t\tmapCtx.dashedLine(Math.round(refuel.s.get(0,i-1)),\r\n\t\t\t\t\t\t\t\t\tMath.round(refuel.s.get(1,i-1)),\r\n\t\t\t\t\t\t\t\t\tMath.round(refuel.s.get(0,i)),\r\n\t\t\t\t\t\t\t\t\tMath.round(refuel.s.get(1,i)),\r\n\t\t\t\t\t\t\t\t\t[4,4,3,4]);\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t}\t\t\r\n\t\t\tmapCtx.stroke();\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t// plot tracks\r\n\t\t\tfor(var i = 0; i < tracks.arr.length; ++i)\r\n\t\t\t{\r\n\t\t\t\tvar c = tracks.color;\r\n\t\t\t\tc.a = tracks.arr[i].opac/100;\r\n\t\t\t\tmapCtx.fillStyle = makeGrey(c,userInputs.engineOn);\r\n\t\t\t\tmapCtx.beginPath();\r\n\t\t\t\tmat.plot(mapCtx,tracks.arr[i].left);\r\n\t\t\t\tmat.plot(mapCtx,tracks.arr[i].right);\r\n\t\t\t\tmapCtx.fill();\r\n\t\t\t}\t\r\n\t\t\t\r\n\t\t\t// plot explosion\r\n\t\t\tif(explosionObj && explosionObj.opac)\r\n\t\t\t{\r\n\t\t\t\tmapCtx.fillStyle = makeGrey(explosionObj.color(),userInputs.engineOn);\r\n\t\t\t\tmapCtx.beginPath();\r\n\t\t\t\tmat.plot(mapCtx,explosionObj.s);\r\n\t\t\t\tmapCtx.fill();\r\n\t\t\t}\t\r\n\t\t\t\r\n\t\t\t// plot targets\r\n\t\t\tfor(var i = 0; i < targets.arr.length; ++i)\r\n\t\t\t{\r\n\t\t\t\tfor(var j = 0; j < targets.arr[i].s.length; ++j)\r\n\t\t\t\t{\r\n\t\t\t\t\tvar c = targets.color[j];\r\n\t\t\t\t\tmapCtx.fillStyle = makeGrey(c,userInputs.engineOn);\r\n\t\t\t\t\tvar m = mat.translate(0,targets.centerPos);\r\n\t\t\t\t\tmapCtx.beginPath();\r\n\t\t\t\t\tmat.plot(mapCtx,mat.mult(m,targets.arr[i].s[j]));\r\n\t\t\t\t\tmapCtx.fill();\r\n\t\t\t\t}\r\n\t\t\t}\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t// plot tank\r\n\t\t\tfor(var i = 0; i < tank.s.length; ++i)\r\n\t\t\t{\r\n\t\t\t\tplotTankPart(i);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// plot cicualar turret of tank\r\n\t\t\tmapCtx.fillStyle = rgba(15,15,15);\r\n\t\t\tmapCtx.beginPath();\r\n\t\t\tvar c = getCenter(tank.s[0]);\r\n\t\t\tmapCtx.arc(c.x,c.y,tank.circRadius,0,toRad(360));\r\n\t\t\tmapCtx.fill();\r\n\r\n\r\n\t\t\t// plot bullets\r\n\t\t\tfor(var i = 0; i < bullets.length; ++i)\r\n\t\t\t{\r\n\t\t\t\tfor(var j = 0; j < bullets[i].arr.length; ++j)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(bullets[i].arr[j].s)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tmapCtx.fillStyle = makeGrey(bullets[i].arr[j].color,userInputs.engineOn);\r\n\t\t\t\t\t\tmapCtx.beginPath();\r\n\t\t\t\t\t\tmat.plot(mapCtx,bullets[i].arr[j].s);\r\n\t\t\t\t\t\tmapCtx.fill();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// plot refuel arrow\r\n\t\t\tif(!refuel.fueling)\r\n\t\t\t{\r\n\t\t\t\tmapCtx.lineWidth = 2;\r\n\t\t\t\tfor(var i = 0; i < refuel.arrow.length; ++i)\r\n\t\t\t\t{\r\n\t\t\t\t\tvar c = rgba(refuel.color.r,refuel.color.g,refuel.color.b,0.8);\r\n\t\t\t\t\tmapCtx.strokeStyle = makeGrey(c,userInputs.engineOn);\r\n\t\t\t\t\tmapCtx.fillStyle = makeGrey(rgba(255,255,255,0.4),userInputs.engineOn);\r\n\t\t\t\t\tmapCtx.beginPath();\r\n\t\t\t\t\tmat.plot(mapCtx,refuel.arrow[i]);\r\n\t\t\t\t\tmapCtx.closePath();\r\n\t\t\t\t\tmapCtx.fill();\r\n\t\t\t\t\tmapCtx.stroke();\r\n\t\t\t\t}\t\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tvar first = 1;\r\n\t\t\r\n\t});",null,"exports.Matrix = function(M_h, M_w, fill)\r\n{\r\n\tif(typeof M_h === 'undefined') M_h = 1;\r\n\tif(typeof M_w === 'undefined') M_w = 1;\r\n\tif(typeof fill === 'undefined') fill = 0;\r\n\t\r\n\tvar self = this;\r\n\tthis.M_data = new Array(M_h * M_w);\r\n\t\r\n\t// initialise all elements in matrix to 0\r\n\tfor(var i = 0; i < this.M_data.length; ++i)\r\n\t{\r\n\t\tthis.M_data[i] = fill;\r\n\t}\r\n\t\r\n\tself.h = function() \r\n\t{ \r\n\t\treturn M_h; \r\n\t};\r\n\tself.w = function()\r\n\t{\r\n\t\treturn M_w;\r\n\t};\r\n\t// This function changes dimensions of matrix so needs to have private access\r\n\tthis.mult = function(other)\r\n\t{\r\n\t\tvar tmp = mMult(this,other);\r\n\t\tthis.M_data = tmp.M_data;\r\n\t\tM_h = tmp.h();\r\n\t\tM_w = tmp.w();\r\n\t\treturn this;\r\n\t};\r\n};\r\n// FOR THESE FUNCTIONS r = row, c = column\r\n\r\nexports.Matrix.prototype.set = function(r,c,x)\r\n{\r\n\tif(r >= this.h() || c >= this.w())\r\n\t\tthrow \"Range Error: no element exists at row=\" + r + \" column=\" + c;\r\n\tvar v = parseFloat(x);\r\n\tif(isNaN(v))\r\n\t\tthrow \"Domain Error: element must be numeric\";\r\n\t\t\r\n\tthis.M_data[r * this.w() + c] = v;\r\n\treturn self;\r\n};\r\n\r\nexports.Matrix.prototype.get = function(r,c)\r\n{\r\n\tif(r >= this.h() || c >= this.w())\r\n\t\tthrow \"Range Error: no element exists at row=\" + r + \" column=\" + c;\r\n\treturn this.M_data[r * this.w() + c];\r\n};\r\n\r\nexports.Matrix.prototype.toString = function()\r\n{\r\n\tvar s = \"\";\r\n\t// find largest common denominator\r\n\tvar d = gcdArray(this.M_data);\r\n\t\r\n\tvar atFront = (d !== 1 ? d.toString() : \"\");\r\n\tvar blank = Array(atFront.length+1).join(\" \");\r\n\t\r\n\r\n\tfor(var i = 0; i < this.h(); ++i)\r\n\t{\r\n\t\tif(i !== 0) s += \"\\n\";\r\n\t\t/*// add coefficient in middle\r\n\t\ts += (i === ~~(this.h()/2)) \r\n\t\t\t\t? atFront : blank;*/\r\n\t\ts += \"|\\t\";\r\n\t\tfor(var j = 0; j < this.w(); ++j)\r\n\t\t{\r\n\t\t\ts += (this.get(i,j) / d) + \"\\t\";\r\n\t\t}\r\n\t\ts += \"|\";\r\n \t}\r\n\treturn s;\r\n};\r\n\r\nvar vldOp = function(f,m1,m2)\r\n{\r\n\tif(f === '+' || f === '-')\r\n\t\treturn m1.h() == m2.h() && m1.w() == m2.w();\r\n\telse if(f === '*')\r\n\t\treturn m1.w() === m2.h();\r\n\telse throw \"invalid sign\";\r\n};\r\n\r\n\r\n\r\nexports.Matrix.prototype.add = function(other)\r\n{\r\n\tif(!vldOp('+',this,other))\r\n\t\tthrow \"Domain error, cannot add matricies\";\r\n\tfor(var i = 0; i < this.M_data.length; ++i)\r\n\t{\r\n\t\tthis.M_data[i] += other.M_data[i];\r\n\t}\r\n\treturn this;\r\n};\r\n\r\nexports.Matrix.prototype.sub = function(other)\r\n{\r\n\tif(!vldOp('-',this,other))\r\n\t\tthrow \"Domain error, cannot add matricies\";\r\n\tfor(var i = 0; i < this.M_data.length; ++i)\r\n\t{\r\n\t\tthis.M_data[i] -= other.M_data[i];\r\n\t}\r\n\treturn this;\r\n};\r\n\r\n\r\nexports.scalarMult = function(c,m)\r\n{\r\n\tvar rtn = new exports.Matrix(m.h(),m.w());\r\n\tfor(var i = 0; i < m.M_data.length; ++i)\r\n\t{\r\n\t\trtn.M_data[i] = m.M_data[i] * c;\r\n\t}\r\n\treturn rtn;\r\n};\r\n\r\nexports.mult = function(m1,m2)\r\n{\r\n\tif(typeof m1 === 'number' && !isNaN(m1))\r\n\t\treturn exports.scalarMult(m1,m2);\r\n\tif(typeof m2 === 'number' && !isNaN(m2))\r\n\t\treturn exports.scalarMult(m2,m1);\r\n\tif(!vldOp('*',m1,m2))\r\n\t\tthrow \"Domain error, cannot multiply matrices\";\r\n\tvar tmp = new exports.Matrix(m1.h(),m2.w());\r\n\tfor(var r = 0; r < tmp.h(); ++r)\r\n\t{\r\n\t\tfor(var c = 0; c < tmp.w(); ++c)\r\n\t\t{\r\n\t\t\tvar sum = 0;\r\n\t\t\t// m1.w() === m2.h()\r\n\t\t\tfor(var k = 0; k < m1.w(); ++k)\r\n\t\t\t\t// sum product of elements in row and column\r\n\t\t\t\tsum += m1.get(r,k) * m2.get(k,c);\r\n\t\t\t// set value in new matrixw \r\n\t\t\ttmp.M_data[r * tmp.w() + c] = sum;\r\n\t\t}\r\n\t}\r\n\treturn tmp;\r\n};\r\n\r\nexports.add = function(m1,m2)\r\n{\r\n\tif(!vldOp('+',m1,m2))\r\n\t\tthrow \"Domain error, cannot add matrices\";\r\n\t\t\r\n\tvar M = new exports.Matrix(m1.h(),m1.w());\r\n\tfor(var i = 0; i < M.M_data.length; ++i)\r\n\t{\r\n\t\tM.M_data[i] = m1.M_data[i] + m2.M_data[i];\r\n\t}\r\n\treturn M;\r\n};\r\nexports.sub = function(m1,m2)\r\n{\r\n\tif(!vldOp('-',m1,m2))\r\n\t\tthrow \"Domain error, cannot subtract matrices\";\r\n\t\t\r\n\tvar M = new exports.Matrix(m1.h(),m1.w());\r\n\tfor(var i = 0; i < M.M_data.length; ++i)\r\n\t{\r\n\t\tM.M_data[i] = m1.M_data[i] - m2.M_data[i];\r\n\t}\r\n\treturn M;\r\n};\r\n\r\nexports.make = function(arr)\r\n{\r\n\t// arr must be 2d (non-jagged) array to make matrix from\r\n\t\r\n\t// check arr is array and first element is array\r\n\tif(!($.isArray(arr) && $.isArray(arr[0])))\r\n\t\tthrow \"Invalid Argument, must be a 2d, non jagged, array\";\r\n\t// assume that array is not jagged, then use width of first row\r\n\tvar M = new exports.Matrix(arr.length, arr[0].length);\r\n\t// loop through new matrix, and copy values across\r\n\tfor(var r = 0; r < M.h(); ++r)\r\n\t{\r\n\t\t// check that arr[r] is array and is of same length as width of M\t\r\n\t\tif(!$.isArray(arr[r]) || arr[r].length !== M.w())\r\n\t\t\tthrow \"Invalid Argument, must be a 2d, non jagged, array\";\r\n\t\tfor(var c = 0; c < M.w(); ++c)\r\n\t\t{\r\n\t\t\tM.set(r,c,arr[r][c]);\r\n\t\t}\r\n\t}\r\n\treturn M;\r\n};\r\n\r\nexports.coor = function(x,y)\r\n{\r\n\treturn {'x':x,'y':y};\r\n};\r\n\r\nexports.coor_at_angle = function(x,y,w,h,theta)\r\n{\r\n\tx = x || 0;\r\n\ty = y || 0;\r\n\tw = w || 0;\r\n\th = h || 0;\r\n\ttheta = theta || 0;\r\n\tvar sin = Math.sin(theta), cos = Math.cos(theta);\r\n\treturn {'x': x + w*cos - h*sin, 'y': y + h*cos + w*sin};\r\n};\r\n\r\nexports.dist = function(c1,c2)\r\n{\r\n\tfunction sqr(x)\r\n\t{\r\n\t\treturn x*x;\r\n\t}\r\n\treturn Math.sqrt(sqr(c1.x-c2.x)+sqr(c1.y-c2.y));\r\n};\r\n\r\nexports.homo_coor = function()\r\n{\r\n\t// argument should be a set of coordinates made with exports.coor(x,y);\r\n\tvar rtn = new exports.Matrix(3,arguments.length);\r\n\tfor(var i = 0; i < rtn.w(); ++i)\r\n\t\trtn.set(0,i,arguments[i].x);\r\n\tfor(var i = 0; i < rtn.w(); ++i)\r\n\t\trtn.set(1,i,arguments[i].y);\r\n\tfor(var i = 0; i < rtn.w(); ++i)\r\n\t\trtn.set(2,i,1);\r\n\treturn rtn;\r\n};\r\n\r\nexports.I = function(n)\r\n{\r\n\tvar rtn = new exports.Matrix(n,n);\r\n\tfor(var i = 0; i < n; ++i)\r\n\t\trtn.set(i,i,1);\r\n\treturn rtn;\r\n};\r\n\r\nexports.plot = function(ctx, M)\r\n{\r\n\tif(M.w() === 0 || M.h() < 2) return;\r\n\tvar div = 1;\r\n\tif(M.h() === 3) // i.e homogenous\r\n\t\tdiv = M.get(2,0);\r\n\tctx.moveTo(M.get(0,0)/div,M.get(1,0)/div);\r\n\tfor(var i = 1; i < M.w(); ++i)\r\n\t{\r\n\t\tctx.lineTo(Math.round(M.get(0,i))/div,Math.round(M.get(1,i))/div);\r\n\t}\r\n};\r\n\r\nexports.translate = function(x,y)\r\n{\r\n\tvar rtn = exports.I(3);\r\n\trtn.set(0,2,x);\r\n\trtn.set(1,2,y);\r\n\treturn rtn;\r\n};\r\nexports.rotate = function(angle,x,y)\r\n{\r\n\tvar cos = Math.cos(angle);\r\n\tvar sin = Math.sin(angle);\r\n\tvar rot = new exports.Matrix(3,3);\r\n\trot.set(0,0,cos);\r\n\trot.set(1,0,-sin);\r\n\trot.set(0,1,sin);\r\n\trot.set(1,1,cos);\r\n\trot.set(2,2,1);\r\n\tif(!x && !y)\r\n\t\treturn rot;\r\n\t\r\n\tx = x || 0;\r\n\ty = y || 0;\r\n\t// translate to origin\r\n\tvar toO = exports.translate(-x,-y);\r\n\t// translate back from origin\r\n\tvar fromO = exports.translate(x,y);\r\n\treturn exports.mult(fromO,exports.mult(rot,toO));\r\n};\r\n\r\nexports.scale = function(x,y)\r\n{\r\n\tif(typeof x === 'undefined')\r\n\t\tx = 1;\r\n\tif(typeof y === 'undefined')\r\n\t\ty = x;\r\n\tvar m = new exports.Matrix(3,3);\r\n\tm.set(0,0,x);\r\n\tm.set(1,1,y);\r\n\tm.set(2,2,1);\r\n\treturn m;\r\n};\r\n\r\nexports.polygon = function(sides, radius, center, pointUp)\r\n{\r\n\tsides = sides || 3;\r\n\tvar m = new exports.Matrix(3,sides);\r\n\tvar rf;\r\n\tif(typeof radius === \"function\")\r\n\t\trf = radius;\r\n\telse\r\n\t\trf = function(i){ return radius; };\r\n\tcenter = center || exports.coor(0,0);\r\n\t\r\n\tvar pi = Math.PI;\r\n\t\r\n\tvar internalAngle = 2*pi/sides;\r\n\tvar theta = !pointUp * internalAngle/2;\r\n\t\r\n\tvar i = 0;\t\r\n\twhile(theta < 2*pi)\r\n\t{\r\n\t\tm.set(0,i,center.x+rf(i)*Math.sin(theta));\r\n\t\tm.set(1,i,center.y+rf(i)*Math.cos(theta));\r\n\t\tm.set(2,i,1);\r\n\t\t++i;\r\n\t\ttheta += internalAngle;\r\n\t}\r\n\treturn m;\r\n};\r\n\r\nfunction gcd(a, b)\r\n{\r\n\twhile (b > 0)\r\n\t{\r\n\t\tvar temp = b;\r\n\t\tb = a % b; // % is remainder\r\n\t\ta = temp;\r\n\t}\r\n\treturn a;\r\n}\r\n\r\nfunction gcdArray(input)\r\n{\r\n\tif(input[0] % 1 !== 0) return 1;\r\n\tvar result = input[0];\r\n\tfor(var i = 1; i < input.length; i++)\r\n\t{\r\n\t\tif(input[i] % 1 !== 0) return 1;\r\n\t\tresult = gcd(result, input[i]);\r\n\t}\r\n\treturn result;\r\n}\r\n"],"sourceRoot":"/source/"}